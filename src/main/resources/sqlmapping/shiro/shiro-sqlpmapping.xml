<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.star.autorder.shiro.dao.ShiroDao">
	<insert id="createUser" parameterType="shiroUser">
		insert into au_user values(seq_au_user.nextval,#{username},#{password},#{salt},#{locked},sysdate,null)
	</insert>
	
	<select id="findByUsername" resultType="shiroUser" parameterType="java.lang.String">
		select fstr_userid id,fstr_username username,fstr_password password,fstr_salt salt,fstr_locked locked from au_user where fstr_username = #{value}
	</select>
	
	
	<resultMap type="shiroUser" id="shiroUserInfo">
		<id property="id" column="userid" />
		<result property="username" column="username" />
		<result property="locked" column="userlocked" />
		<collection property="roleSet" column="FSTR_ROLEID" ofType="role">
			<id property="id" column="roleid" />
			<result property="role" column="role"/>
			<result property="description" column="roleDescription" />
			<result property="avaliable" column="roleAvaliable"/>
			<collection property="permissionSet" column="FSTR_PERMISSIONID" ofType="permission">
				<id property="id" column="permissionid"/>
				<result property="permission" column="permission"/>
				<result property="description" column="permissionDescription"/>
				<result property="avaliable" column="permissionAvaliable"/>
			</collection>
		</collection>
	</resultMap>
	
	<select id="getUserByUsername" parameterType="java.lang.String" resultMap="shiroUserInfo">
		select
			t1.fstr_userid userid, 
			t1.fstr_username username,
			t1.fstr_locked userlocked,
			t2.fstr_roleid roleid,
			t2.fstr_role role,
			t2.fstr_description roleDescription,
			t2.fstr_avaliable roleAvaliable,
			t3.fstr_permission permissionid,
			t3.fstr_permission permission,
			t3.fstr_desciption permissionDescription,
			t3.fstr_avaliable permissionAvaliable
		from au_user t1
			left join au_rl_user_role r1 on t1.fstr_userid=r1.fstr_userid
			left join au_role t2 on t2.fstr_roleid=r1.fstr_roleid
			left join au_rl_role_permission r2 on t2.fstr_roleid=r2.fstr_roleid
			left join au_permission t3 on t3.fstr_permissionid=r2.fstr_permissionid
		where t1.fstr_username = #{value}
	</select>
	
	<insert id="createPermission" parameterType="permission">
		insert into au_permission values(seq_su_permission.nextval,#{permission},#{description}ï¼Œ#{avaliable},sysdate,null)
	</insert>
	
	<insert id="createRole" parameterType="role">
		insert into au_role values(seq_au_role.nextval,#{role},#{description},#{avaliable},sysdate,null)
	</insert>
	
	<insert id="addRelationUser2Role" parameterType="java.util.List">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into au_rl_user_role (fstr_userid,fstr_roleid)
		valuse
		<foreach collection="list" item="u2r" index="index" separator=",">
			(#{userid,#{roleid})
		</foreach>
	</insert>
	
	<insert id="addRelationRole2Permission" parameterType="java.util.List">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into au_rl_role_permission (fstr_roleid,fstr_permissionid)
		values
		<foreach collection="list" item="r2p" index="index" separator=",">
			(#{roleid},#{permissionid})
		</foreach>
	</insert>
	
	<select id="getAllRoles" resultType="role">
		select fstr_roleid roleid,fstr_role role,fstr_description description,fstr_avaliable avaliable from au_role
	</select>
	
	<select id="getAllPermissions" resultMap="permission">
		select fstr_permissionid permissionid,fstr_permission permission,fstr_description description,fstr_avaliable avaliable from au_permission
	</select>	
</mapper>